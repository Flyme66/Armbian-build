name: Build Armban Dtb

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_kernel_src_file:
        description: "kernel_src_file http url"
        required: true
        default: "https://mirrors.tuna.tsinghua.edu.cn/armbian/pool/main/l/linux-source-5.10.144-current-meson64/linux-source-current-meson64_22.08.2_all.deb"
      set_kernel_version_patch:
        description: "kernel_version_patch"
        required: true
        default: "meson64-5.10"
  #schedule:
    #- cron: "0 17 * * 0"

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV

      - name: Download kernel src
        id: down
        run: |
          wget -O linux-source.deb ${{ github.event.inputs.set_kernel_src_file }}

      - name: Build Armban Dtb
        id: build
        run: |
          httpurl=${{ github.event.inputs.set_kernel_src_file }}
          ar -xv linux-source.deb
          mkdir linux
          tar -C linux -xJf data.tar.xz
          cd linux
          git apply ../patch/armbian/${{ github.event.inputs.set_kernel_version_patch }}/*.patch
          export CROSS_COMPILE=aarch64-linux-gnu-
          export ARCH=arm64
          pwd
          ls -alF
          make dtbs
          tar -czf /workdir/linux-dtbs.tar.gz arch/arm64/boot/dts/amlogic/*
          echo "::set-output name=status::success"

      - name: Upload file to Release
        uses: ncipollo/release-action@main
        if: steps.build.outputs.status == 'success' && !cancelled()
        with:
          tag: Armbian_Dtb_${{ env.COMPILE_STARTINGTIME }}
          artifacts: /workdir/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            Kernel src:${{ github.event.inputs.set_armbian_file }}
            This is Armbian dtb image

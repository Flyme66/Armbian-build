name: Build ArchLinux PKG

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'REPO URL'
        required: true
        default: 'https://github.com/a520ass/alarm-pkg.git'
      repo_branch:
        description: 'REPO BRANCH'
        required: true
        default: 'main'
      pkgbuild_directory:
        description: 'pkgbuild_directory'
        required: false
        default: ''
      pkgbuild_platform:
        description: 'pkgbuild_platform'
        required: true
        default: 'linux/arm64'
  #schedule:
    #- cron: "0 17 * * 0"

env:
  REPO_URL: ${{ inputs.repo_url }}
  REPO_BRANCH: ${{ inputs.repo_branch }}
  PKGBUILD_DIR: ${{ inputs.pkgbuild_directory }}
  ARCH_PLATFORM: ${{ inputs.pkgbuild_platform }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    strategy:
      matrix:
        pkgbuild_platform: [linux/arm64, linux/amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y wget git
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

      - name: Download source code
        id: down
        run: |
          git clone --depth 1 -b $REPO_BRANCH $REPO_URL archpkgsrc

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: matrix.pkgbuild_platform == 'linux/arm64'

      - name: Build Arch Linux Package
        id: build_archlinuxpkg
        uses: a520ass/build-archlinux-package@main
        with:
          docker-image: menci/aur-builder:archlinux
          platform: ${{ matrix.pkgbuild_platform }}
          pkgbuild-directory: ${{ github.workspace }}/archpkgsrc/${{ env.PKGBUILD_DIR }}
          target-directory: /workdir

      - name: Build
        id: build
        run: |
          cd /workdir
          ls -alF
          echo "::set-output name=status::success"

      - name: Upload file to Release
        uses: ncipollo/release-action@main
        if: steps.build.outputs.status == 'success' && !cancelled()
        with:
          tag: Arch_Linux_Package_${{ env.COMPILE_STARTINGTIME }}
          artifacts: /workdir/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            src:${{ env.REPO_URL }}/${{ env.PKGBUILD_DIR }}#${{ env.REPO_BRANCH }}
            This is Arch Linux Package
